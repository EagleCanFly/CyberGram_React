{"version":3,"sources":["components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"names":["Login","props","required","value","undefined","onSubmit","render","handleSubmit","submitError","className","validate","name","input","meta","touched","htmlFor","type","placeholder","error","captchaUrl","src","alt","component","style","marginTop","compose","connect","state","isAuth","auth","isError","login","parameters","a","email","password","captcha","to","FORM_ERROR"],"mappings":"yLAiEeA,EA9DD,SAACC,GAEX,IAAMC,EAAW,SAAAC,GAAK,OAAKA,OAAQC,EAAY,0BAE/C,OAAQ,kBAAC,IAAD,CAAMC,SAAUJ,EAAMI,SAChBC,OAAQ,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,YAAhB,OAEJ,0BACIC,UAAW,sBACXJ,SAAUE,GAEV,6BACI,kBAAC,IAAD,CAAOG,SAAUR,EACVS,KAAK,UACP,gBAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAT,OACG,yBAAKJ,UAAWI,EAAKC,QAAU,eAAiB,IAC5C,2BAAOC,QAAQ,SAAf,SACA,yCAAOJ,KAAM,QACNF,UAAW,gBACPG,EAFX,CAGOI,KAAK,OACLC,YAAaJ,EAAKC,UAAYD,EAAKK,OAASL,EAAKL,qBAIxE,6BACI,kBAAC,IAAD,CAAOE,SAAUR,EACVS,KAAK,aACP,gBAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,KAAT,OACG,yBAAKJ,UAAWI,EAAKC,QAAU,eAAiB,IAC5C,2BAAOC,QAAQ,YAAf,YACA,yCAAOJ,KAAM,WACNF,UAAW,gBACPG,EAFX,CAGOI,KAAK,WACLC,YAAaJ,EAAKC,SAAWD,EAAKK,cAKxDjB,EAAMkB,YACP,yBAAKV,UAAW,QACZ,mDACA,yBAAKW,IAAKnB,EAAMkB,WAAYE,IAAI,YACjC,kBAAC,IAAD,CAAOV,KAAM,UAAWW,UAAW,WAEtC,4BAAQb,UAAW,iCAAkCO,KAAK,UAA1D,WACCR,GAAe,yBAAKC,UAAU,2BAA2BD,GAE1D,yBAAKe,MAAO,CAACC,UAAW,SACpB,oDACA,6BACA,gD,wBClBfC,sBACXC,aAToB,SAACC,GACrB,MAAO,CACHC,OAAQD,EAAME,KAAKD,OACnBE,QAASH,EAAME,KAAKC,QACpBX,WAAYQ,EAAME,KAAKV,cAKF,CAACY,YADfN,EA5BQ,SAACxB,GAEpB,IAAMI,EAAQ,uCAAG,WAAO2B,GAAP,SAAAC,EAAA,sEACRhC,EAAM8B,MAAMC,EAAWE,MAAOF,EAAWG,SAAUH,EAAWI,SADtD,WAGQ,IAAjBnC,EAAM2B,OAHG,yCAIF,kBAAC,IAAD,CAAUS,GAAG,cAJX,+CAMAC,IAAa,iBANb,2CAAH,sDASd,OAAqB,IAAjBrC,EAAM2B,OAAwB,kBAAC,IAAD,CAAUS,GAAG,aAExC,kBAAC,EAAD,CAAON,MAAO9B,EAAM8B,MACbH,OAAQ3B,EAAM2B,OACdT,WAAYlB,EAAMkB,WAClBW,QAAS7B,EAAM6B,QACfzB,SAAUA","file":"static/js/4.dedf723b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Field, Form} from \"react-final-form\";\r\n\r\nconst Login = (props) => {\r\n\r\n    const required = value => (value ? undefined : 'This field is required')\r\n\r\n    return (<Form onSubmit={props.onSubmit}\r\n                  render={({handleSubmit, submitError}) => (\r\n\r\n                      <form\r\n                          className={'form-group w-50 m-3'}\r\n                          onSubmit={handleSubmit}>\r\n\r\n                          <div>\r\n                              <Field validate={required}\r\n                                     name=\"email\">\r\n                                  {({input, meta}) => (\r\n                                      <div className={meta.touched ? 'was-validate' : ''}>\r\n                                          <label htmlFor=\"email\">Email</label>\r\n                                          <input name={'email'}\r\n                                                 className={'form-control'}\r\n                                                 {...input}\r\n                                                 type=\"text\"\r\n                                                 placeholder={meta.touched && (meta.error || meta.submitError)}/>\r\n                                      </div>\r\n                                  )}</Field>\r\n                          </div>\r\n                          <div>\r\n                              <Field validate={required}\r\n                                     name=\"password\">\r\n                                  {({input, meta}) => (\r\n                                      <div className={meta.touched ? 'was-validate' : ''}>\r\n                                          <label htmlFor='password'>Password</label>\r\n                                          <input name={'password'}\r\n                                                 className={'form-control'}\r\n                                                 {...input}\r\n                                                 type=\"password\"\r\n                                                 placeholder={meta.touched && meta.error}/>\r\n                                      </div>\r\n                                  )}\r\n                              </Field>\r\n                          </div>\r\n                          {props.captchaUrl &&\r\n                          <div className={'mt-3'}>\r\n                              <span>Enter the captcha</span>\r\n                              <img src={props.captchaUrl} alt=\"captcha\"/>\r\n                             <Field name={'captcha'} component={\"input\"}/>\r\n                          </div>}\r\n                          <button className={'btn btn-outline-secondary mt-4'} type=\"submit\">Sign in</button>\r\n                          {submitError && <div className=\"alert alert-danger mt-4\">{submitError}</div>}\r\n\r\n                          <div style={{marginTop: 30 + 'px'}}>\r\n                              <span>starrcraft@mail.ru</span>\r\n                              <br/>\r\n                              <span>orlov123</span>\r\n                          </div>\r\n                      </form>\r\n\r\n                  )}\r\n        />\r\n\r\n    );\r\n}\r\n\r\nexport default Login;","import {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport React from \"react\";\r\nimport Login from \"./Login\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {FORM_ERROR} from \"final-form\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst LoginContainer = (props) => {\r\n\r\n    const onSubmit = async (parameters) => {\r\n       await props.login(parameters.email, parameters.password, parameters.captcha);\r\n\r\n        if (props.isAuth === true) {\r\n            return <Redirect to='/profile'/>\r\n        } else  {\r\n            return {[FORM_ERROR]: 'Login Failed'};\r\n        }\r\n    }\r\n    if (props.isAuth === true) return <Redirect to='/profile'/>\r\n\r\n    return <Login login={props.login}\r\n                  isAuth={props.isAuth}\r\n                  captchaUrl={props.captchaUrl}\r\n                  isError={props.isError}\r\n                  onSubmit={onSubmit}/>\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        isError: state.auth.isError,\r\n        captchaUrl: state.auth.captchaUrl\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {login}))\r\n(LoginContainer);\r\n"],"sourceRoot":""}